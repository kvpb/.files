# Shell Special Built-In Utilities (Commands)



# Shell Builtin Utilities (Commands)

#	sudo			execute a command as another user

#alias ffs='sudo $(!-1)'
alias ffs='sudo $(history -p \!\!)'
#alias ffs='sudo $(fc -ln -1)'

#	cd				change the working directory
# (i) Bourne Shell (sh) builtin.

alias d='cd '

alias ..='cd ..' # Change the working directory to the parent of the current one.
alias ...='cd ../..' # Change the working directory to the grand-parent of the current one.
alias ....='cd ../../..' # Change the working direcrory to the grand-grand-parent of the current one.
alias .....='cd ../../../..' # Change the working directory to the grand-grand-grand-parent of the current one.
alias ......='cd ../../../../..' # Change the working directory to the grand-grand-grand-grand-parent of the current one.
alias .......='cd ../../../../../..' # Change the working directory to the fossilized ancestor of the current one.
alias ........='cd ../../../../../../..' # dude
alias .........='cd ../../../../../../../..' # no
alias ..........='cd ../../../../../../../../..' # 
alias ...........='cd ../../../../../../../../../..' # 

alias rt='cd /' # Change the working directory to the root.

alias vl='cd /Volumes'
# Change the working directory to that of the mounted volumes.

alias ~='cd ${HOME}' # Change the working directory to the current user's home. # cd would do the same, and this is what I enter most, but it would break where the meaning of ~ changes.

alias .f='cd ${HOME}/.files && git status --short && printf "%s\n" '.gitnote:' && cat .gitnote && printf "\n"' # Change the working directory to that of my dot-files, show the working tree status, then concatenate and print .gitnote.

alias dt='cd ${HOME}/Desktop' # Change the working directory to that of the current user's desktop.

alias dx='cd ${HOME}/Documents' # Change the working directory to that of the current user's documents.

alias dl='cd ${HOME}/Downloads' # Change the working directory to that of the current user's downloads.

alias ly='cd ${HOME}/Library' # Change the working directory to that of the current user's library.

alias mz='cd ${HOME}/Movies' # Change the working directory to that of the current user's movies.

alias mc='cd ${HOME}/Music' # Change the working directory to the one of the current user's music.

alias px='cd ${HOME}/Pictures' # Change the working directory to the one of the current user's pictures.

alias ms='cd ${HOME}/Miscellaneous' # Change the working directory to the one of my miscellaneous files.

alias wk='cd ${HOME}/Work' # Change the working directory to the one of my work in progress.

alias tf='cd ${HOME}/Temporary' # Change the working directory to the one of the current user's temporary files.

alias th='cd ${HOME}/.Trash' # Change the working directory to the one of the current user's trash.

alias db='cd ${HOME}/Dropbox' # Change the working directory to the one of the current user's Dropbox.

#	source
# (i) Bourne-Again Shell (bash) builtin.

#alias src='source '
alias sc='source '
#alias s='source '

#	chdir
# (i) Z Shell (zsh) builtin.

#alias d='chdir '

#	exec

alias ns='exec ${SHELL} -l ' # Execute the default login shell as a login shell. (Replace the current shell process image with a new one.)

#	history

alias hy='history'
#alias h='history | tail -n 20'
alias _='!-2'

#	printenv		print out the environment

alias pe='(set -o posix; set) | cat'

#	exit

#alias e='exit'

# 'Internal' Programs (Commands)

#	vi				Vi IMproved, a programmer's text editor
#	vim

alias vi='vim +star '
alias vim='vim +startinsert '
alias v='vim '

#	mkdir			make directories

alias md='mkdir '

#	killall			kill processes by name

alias ka='killall '
#alias k='killall '

#	ruby			Interpreted object-oriented scripting language

#alias rb='ruby '

#	python			an interpreted, interactive, object-oriented programming language

alias py='python '
alias py2='python2 '
alias py3='python3 '

alias ct='python -c "import sys; print( len(sys.argv[1]) );" ' # Count the characters of a given string.

alias uc='python3 -c "import sys; print(sys.argv[1].upper());" ' # Increase the case of the first given string.
alias lc='python3 -c "import sys; print(sys.argv[1].lower());" ' # Lower the case of the first given string.

#	JSC				https://trac.webkit.org/wiki/JSC

#alias jsc='/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc '
#alias js='/System/Library/Frameworks/JavaScriptCore.framework/Versions/A/Resources/jsc '

#	node			server-side JavaScript runtime

#alias njs='node '
#alias nj='node '
alias nd='node '
alias js='node '

#	osascript		execute OSA scripts (AppleScript, JavaScript, etc)

#alias osas='osascript '
alias osa='osascript '
#alias os='osascript '

#	tar				manipulate tape archives

alias tgz='tar -czfv ' # Create a new archive containing the specified items then compress the resulting archive with gzip, listing each file name as it is read written to the archive.

#	rsync			faster, flexible replacement for rcp

#alias rsync-copy='rsync -avz --progress -h '
#alias rsync-move='rsync -avz --progress -h --remove-source-files '
#alias rsync-synchronize='rsync -avzu --delete --progress -h '
#alias rsync-update='rsync -avzu --progress -h '
# somebody's rsync aliases

#	open			open files and directories

#alias opn='open '
alias op='open '
#alias o='open '

alias te='open -e ' # Open file using TextEdit.

#alias pw='open -b com.apple.Preview ' # Open file using Preview.

#alias qtp='open -b com.apple.QuickTimePlayerX ' # Open file using QuickTime Player.

#alias si='open -b com.apple.Safari ' # Open file using Safari.

#alias vlc='open -b org.videolan.vlc ' # Open file using VLC Media Player.

#alias aps='open -b com.adobe.Photoshop ' # Open file using Photoshop CS6.

#alias pslr='open -b com.adobe.Lightroom6 ' # Open file using Photoshop Lightroom 6.

#alias mwd='open -b com.microsoft.Word ' # Open file using Word for Mac 2011.

#alias mxl='open -b com.microsoft.Excel ' # Open file using Excel for Mac 2011.

#alias gvi='open -b org.vim.MacVim ' # Open file using MacVim.

alias rf='open -R ' # Reveal files using Finder.

#	xattr			display and manipulate extended attributes

alias dxa='xattr -rc .' # Remove every file's all extended attributes of the current directory recursively.

#	qlmanage		Quick Look server debug and management tool

#alias QuickLook='qlmanage '
#alias quicklook='qlmanage '
alias ql='qlmanage '

alias	qlp='qlmanage -p ' # Display the Quick Look generated preview for the specified files.

# 	ls				list directory contents

if ls --color > /dev/null 2>&1 # If this silenced command evaluates to true,
then # the implemented LS is the GNU LS,
	alias ls='ls --color ' # so colorize the output of GNU LS,
else # or else the implemented LS is the BSD LS, so
	alias ls='ls -G '
fi # Colorize the output of LS.
#alias ls='lf -F ' # Type the output of LS.
alias l='ls '

alias lh='ls -Ad .*' # List directory hidden files.
#alias lh='la -1AdF .*'

alias lf='ls -AF | grep -v -e / -e \* -e @ -e = -e % -e \| -e \>' # List the regular files of the directory.

alias lhf='ls -AdF .* | grep -v -e / -e \* -e @ -e = -e % -e \| -e \>' # List the hidden regular files of the directory.

alias ld='ls -d */' # List the subdirectories of the directory.

alias lhd='ls -d .*/ | tail -n +3' # List the hidden subdirectories of the directory.

alias la='ls -a ' # List all directory contents.
#alias la='ls -1aF '

#alias l='ls -1F ' # List simply directory contents.

#	du				display disk usage statistics

alias du='du -c -d 0 -h ' # Display DU stats with a grand total, an entry for all files and directories 0 directories deep, human-readably.

#	printf			formatted output



#	less			opposite of more

alias les='less '

#	clear			clear the terminal screen

#alias clr='clear '
#alias cl='clear '
#alias c='clear '

#	PlistBuddy		read and write values to plists

#alias PlistBuddy='/usr/libexec/PlistBuddy '
#alias plistbuddy='/usr/libexec/PlistBuddy '
alias pb='/usr/libexec/PlistBuddy '

#	softwareupdate	system software update tool

alias swu='softwareupdate '
#alias sw='softwareupdate '

#	airport			get information for 802.11 interface

#alias AirPort='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport '
#alias airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport '
alias ap='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport '

#	man				format and display the on-line manual pages

alias mn='man '
#alias hp='man '
#alias i='man '

alias ascii='man ascii' # Output the man page of the ASCII character sets.

# External Programs (Commands)

# 	git				the stupid content tracker

#alias git='/usr/local/git/bin/git ' # Get fucked, Apple. /i\ requires Git for macOS from the official website. http://git-scm.com/
alias g='git '

#	fswatch			Ask for notification when the contents of the specified files of directory hierarchies are modified.

alias fsw='fswatch '
#alias fw='fswatch '

#	octave

alias oct='octave '

#	mas-cli			A simple command line interface for the Mac App Store. Designed for scripting and automation.

#alias mas='mas-cli '

# Shell Functions

#alias cs='cls'
alias c='cls'

alias mfa='MakeFinderAlias '

alias dds='DeleteDSStore'

# Computer Programs

#alias SetVolume='sh ${HOME}/.files/bin/SetVolume.sh'
#alias setvol='sh ${HOME}/.files/bin/SetVolume.sh'
alias sv='sh ${HOME}/.files/bin/SetVolume.sh'

alias alarm='sh ${HOME}/.files/bin/alarm.sh'
#alias am='sh ${HOME}/.files/bin/alarm.sh'

#alias RPwG='ruby ${HOME}/.files/bin/rpwg.py'
alias rpwg='python3 ${HOME}/.files/bin/rpwg.py'
alias pw='python3 ${HOME}/.files/bin/rpwg.py'
