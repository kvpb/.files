#!/usr/bin/env bash

kernel=$(uname -s;)
[ "${kernel}" = 'Darwin' ] && systemsoftwareversion=$(defaults read loginwindow SystemVersionStampAsString;)
[ ! -z ${systemsoftwareversion} ] && systemsoftwaremajorversion=$(printf "${systemsoftwareversion}" | cut -f1,1 -d'.';)
[ ! -z ${systemsoftwareversion} ] && systemsoftwareminorversion=$(printf "${systemsoftwareversion}" | cut -d. -f2- | cut -f1,1 -d'.';)
[ ${systemsoftwaremajorversion} -ge 11 -o ${systemsoftwareminorversion} -ge 11 ] && SIPstatus=$(csrutil status | sed -E 's/.*(...abled).*/\1/g';)
[ ${systemsoftwaremajorversion} -ge 11 -o ${systemsoftwareminorversion} -ge 12 ] && systemsoftware="${systemsoftwareversion/#/macOS }"
[ ${systemsoftwareminorversion} -ge 8 -a ${systemsoftwareminorversion} -le 11 ] && systemsoftware="${systemsoftwareversion/#/OS X }"
[ ${systemsoftwareminorversion} -ge 0 -a ${systemsoftwareminorversion} -le 7 ] && systemsoftware="${systemsoftwareversion/#/Mac OS X }"

if [ "${systemsoftware:0:5}" = 'macOS' -o "${systemsoftware:0:4}" = 'OS X' -o "${systemsoftware:0:8}" = 'Mac OS X' ];
then
	if [ ${systemsoftwaremajorversion} -eq 11 ];
	then
		cd /Users/${USER} && /bin/bash <(curl -fsSL https://raw.githubusercontent.com/kvpb/.files/master/.macos11)
	elif [ ${systemsoftwareminorversion} -eq 10 ];
	then
		cd /Users/${USER} && curl -fsS -J -L -H 'Accept: application/octet-stream' https://raw.githubusercontent.com/kvpb/.files/master/.osx1010 -o SetUpOSX.sh && chmod +x SetUpOSX.sh && /bin/bash SetUpOSX.sh
	elif [ ${systemsoftwareminorversion} -eq 9 ];
	then
		cd /Users/${USER} && curl -fsS -J -L -H 'Accept: application/octet-stream' https://raw.githubusercontent.com/kvpb/.files/master/.osx109 -o SetUpOSX.sh && chmod +x SetUpOSX.sh && /bin/bash SetUpOSX.sh
#	elif [ ${systemsoftwareminorversion} -eq 6 ];
#	then
#		cd /Users/${USER} && curl -fsS -J -L -H 'Accept: application/octet-stream' https://raw.githubusercontent.com/kvpb/.files/master/.macosx106 -o SetUpMacOSX.sh && chmod +x SetUpMacOSX.sh && /bin/bash SetUpMacOSX.sh
#	elif [ ${systemsoftwareminorversion} -eq 4 ];
#	then
#		cd /Users/${USER} && curl -fsS -J -L -H 'Accept: application/octet-stream' https://raw.githubusercontent.com/kvpb/.files/master/.macosx104 -o SetUpMacOSX.sh && chmod +x SetUpMacOSX.sh && /bin/bash SetUpMacOSX.sh
	fi
#elif [ "${systemsoftware}" = 'iOS' ];
#then
#	cd ${HOME} && /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/kvpb/.files/master/.ios)"
elif [ ${systemsoftwareminorversion} -ge 0 -a ${systemsoftwareminorversion} -le 5 -o ${systemsoftwareminorversion} -ge 7 -a ${systemsoftwareminorversion} -le 8 -o ${systemsoftwareminorversion} -ge 11 -a ${systemsoftwareminorversion} -le 12 -o ${systemsoftwareminorversion} -ge 14 ]; #elif [ ${systemsoftwareminorversion} -ge 0 -a ${systemsoftwareminorversion} -le 5 ] || [ ${systemsoftwareminorversion} -ge 7 -a ${systemsoftwareminorversion} -le 8 ] || [ ${systemsoftwareminorversion} -ge 11 -a ${systemsoftwareminorversion} -le 12 ] || [ ${systemsoftwareminorversion} -ge 14 ];
then
	printf "Warning: Software Incompatibility\nThis Mac runs ${systemsoftware}. .acos does not explicitly support ${systemsoftware}. The execution with root privileges of incompatible setup scripts may result in permanent damage to the system software. Run the latest ACOS configuration script anyway, \e[4my\e[0mes (`y`) or \e[4mn\e[0mo (`n`)?\n"
	read input
	case ${input} in
		[Yy]* ) cd /Users/${USER} && /bin/bash <(curl -fsSL https://raw.githubusercontent.com/kvpb/.files/master/.macos11)
		[Nn]* ) printf '\n'
		exit 1;;
		* ) printf 'QVIS TACET CONSENTIRE VIDETVR'
		exit 1;;
	esac
else
	printf 'Error: Software Incompatibility\n.acos could not identify this operating system. Thus .acos is not compatible with it.\n'
	exit 1
fi
exit 0

# .acos
# Apple Computer Operating System Configuration Script
# 
# Karl V. P. Bertin `kvpb`
# Telephone: +33 A BB BB BB BB
# Email: local-part@domain
# LinkedIn: https://www.linkedin.com/in/karlbertin
# Instagram: https://www.instagram.com/add/karlbertin
# TikTok: https://vm.tiktok.com/ZSwAmcFh/
