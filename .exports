#!/usr/bin/env bash

# System Environment Variables (e.g. EDITOR, HOME, LOGNAME, MAIL, MANPATH, PAGER, PATH, SHELL, USER, VISUAL)

. ${HOME}/.cargo/env # Rust & Cargo
export GEM_HOME=${HOME}/.gem
export GEM_PATH=${GEM_HOME}:${GEM_PATH}
# Ruby & RubyGems
export PATH=/usr/local/bin:${PATH} # Python (https://docs.python.org/3/using/mac.html)
export PATH=/usr/local/bin:${PATH} # Node.js & NPM (node-v14.16.1.pkg)
export PATH=${HOME}/.npm-global/bin:${PATH}
#export NPM_CONFIG_PREFIX=${HOME}/.npm-global
# NPM (https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally)
export PATH=/usr/local/octave/3.8.0/bin:${PATH} # Octave 3.8.0 (GNU_Octave_3.8.0-6.dmg/README.txt)
export PATH=/opt/local/bin:/opt/local/sbin:${PATH} #export PATH=${PATH}:/opt/local/bin
#export MANPATH=/opt/local/share/man:${MANPATH} # seemingly breaks MANPATH.
# MacPorts (https://guide.macports.org/chunked/installing.shell.html)
eval "$(/opt/homebrew/bin/brew shellenv)" # Homebrew (/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)")

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

export VISUAL=vim
export EDITOR=${VISUAL}

export CLICOLOR=1
if ls --color > /dev/null 2>&1 # If this silenced command evaluates to true,
then # the implemented LS is the GNU LS,
	export LS_COLORS='di=34;46:ln=35:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=30;41:sg=30;46:tw=30;42:ow=30;43'
else # or else the implemented LS is the BSD LS.
	export LSCOLORS=egfxcxdxbxegedabagacad # Finder color scheme for LS; default value: exfxcxdxbxegedabagacad
fi # Set the colors of LS.

export BASH_SILENCE_DEPRECATION_WARNING=1 # https://web.archive.org/web/20190604031607/https://support.apple.com/en-us/HT208050

# Shell Environment Variables (e.g. MAILCHECK, PS1, PS2)

#shopt -s histappend # (i) should be run here first; already is ran in .bashrc.
if [ ${BASH_VERSION::1} -lt 4 ]
then
	if [ ${BASH_VERSION:2:1} -lt 3 ] #if [ ${BASH_VERSION::3} -gt 3.2 ]
	then
		export HISTSIZE=10129639 #$(( 2147483647 / ( 80 + 132 ) ))
	fi
else
	export HISTSIZE=-1 #$(( 9223372036854775807 / ( 80 + 132 ) ))
fi
export HISTFILESIZE=${HISTSIZE}
export HISTFILE=${HOME}/.bash_history
export HISTCONTROL=ignoredups:erasedups
export HISTIGNORE=ls:pwd:cd:history
export HISTTIMEFORMAT="$(printf '\r\e[K')$(tput setaf 0)$(tput setab 7)%F %T$(tput sgr0)  "
export PROMPT_COMMAND='history -a; history -n'
export PS1='\[\033[7m\]\u@\h:\[\033[00m\]\[\033[4m\]\w\[\033[00m\]\n\[\033[7m\]\D{%Y.%m.%d}@\t\[\033[00m\] \[\033[7m\]\$\[\033[00m\] ' #PS1='\[\033[7m\]\u@\h\[\033[00m\] \[\033[7m\]\D{%Y.%m.%d}@\t\[\033[00m\] \[\033[7m\]\$\[\033[00m\] ' #PS1='\[\033[7m\]\D{%Y.%m.%d}@\t\[\033[00m\] \[\033[7m\]\u@\h\$\[\033[00m\] '

# User Environment Variables (e.g. PATH)

if [ $(uname -s) = 'Darwin' ]
then
	export DOT=/Users/${USER}/.files
	#export DOTFILES=/Users/${USER}/.files
	export LIB=/Users/${USER}/Library
	#export LIBRARY=/Users/${USER}/Library
	export BIN=/Users/${USER}/bin
	#export BINARIES=/Users/${USER}/bin
	export APP=/Users/${USER}/Applications
	#export APPLICATIONS=/Users/${USER}/Applications
	export WRK=/Users/${USER}/Work
	#export WORK=/Users/${USER}/Work
	export MSC=/Users/${USER}/Miscellaneous
	#export MISCELLANEOUS=/Users/${USER}/Miscellaneous
	export DOC=/Users/${USER}/Documents
	#export DOCUMENTS=/Users/${USER}/Documents
	export PIC=/Users/${USER}/Pictures
	#export PICTURES=/Users/${USER}/Pictures
	export SIC=/Users/${USER}/Music
	#export MUSIC=/Users/${USER}/Music
	export MOV=/Users/${USER}/Movies
	#export MOVIES=/Users/${USER}/Movies
	export DLD=/Users/${USER}/Downloads
	#export DOWNLOADS=/Users/${USER}/Downloads
	export DSK=/Users/${USER}/Desktop
	#export DESKTOP=/Users/${USER}/Desktop
	export PUB=/Users/${USER}/Public
	#export PUBLIC=/Users/${USER}/Public
	export TMP=/Users/${USER}/Temporary
	#export TEMPORARY=/Users/${USER}/Temporary
	export TRH=/Users/${USER}/.Trash
	#export TRASH=/Users/${USER}/.Trash
	export VOL=/Volumes
	#export VOLUMES=/Volumes
fi
