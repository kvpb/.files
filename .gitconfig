; core variables
[core]
	editor = vim
	pager = cat
	trustctime = false ; http://www.git-tower.com/blog/make-git-rebase-safe-on-osx
	precomposeunicode = false ; http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html

[user]
	name = Karl
	email = local-part@domain

#[github]
#	user = kvpb

#[qwasar]
#	user = bertin_k

[push]
	default = simple

[filter "lfs"]
	smudge = git-lfs smudge %f
	required = true
	clean = git-lfs clean %f

[alias]
	git = !git
	#ga = !git add
	#gaa = !git add --all ; Add file contents to the index, updating the index to match the working tree.
	#gr = !git rm
	#gc = !git commit -m ; Record changes to the repository.
	#gcnm = !git commit --allow-empty-message --message='' ; Record changes to the repository, allowing empty commit message.
	#gp = !git push
	#gpch = !git push --force --tags origin 'refs/heads/*' ; Push corrected history.
	#gpf = !git push --force ; Update remote refs that are not ancestors of the local ref used to overwrite it, along with associated objects.
	#gpo = !git push origin ; Update remote refs along with associated objects, pushing 'matching' branches to origin.
	#gri = !git rebase --interactive ; Reapply commits on top of another base tip, making a list of the commits which are about to be rebased.
	#gs = !git status
	a = add
	c = commit
	cm = commit -m
	cn = commit --allow-empty-message --message=''
	ca = commit --amend
	p = push
	pf = push --force
	pl = push --force-with-lease
	h = stash
	ha = stash apply
	hp = stash pop
	hl = stash list
	r = rebase
	ri = rebase --interactive
	rd = rebase --committer-date-is-author-date
	rda = rebase --committer-date-is-author-date --root
	rc = rebase --continue
	d = diff
	ll = log --reverse --pretty=fuller
	l = log --max-count=10 --reverse --pretty=oneline
	lf = log --reverse --pretty=fuller
	s = status --short --untracked-files=no
	sl = status --long

[color]
	ui = true

[color "status"]
	header = normal dim
	#added = ; See `updated`.
	updated = green ; Since green symbolizes hope, and blue, protection, green better fits this case, as files are added but not pushed.
	changed = red ; Yellow or orange would better fit `changed`, if there were more options, e.g. for added and deleted files.
	untracked = white dim ; `white bold` better fits the output of git-status, and `white dim` better fits that of git-status --short. Since I more often use the short output of git-status, let's go for dim white.
