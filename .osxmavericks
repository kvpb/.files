#!/usr/bin/env bash

sudo  -v                                                                        # Ask for an administrator password.
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null & # Update sudo time stamp until the script is over.

sudo scutil --set ComputerName                                                                        "Karl Bertin's Macintosh"
sudo scutil --set HostName                                                                            "Karl Bertin's Macintosh"
sudo scutil --set LocalHostName                                                                       "Karl Bertin's Macintosh"
sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.smb.server NetBIOSName -string "Karl Bertin's Macintosh"
# Set computer's name

sudo pmset -a standbydelay 86400 # Set standby delay to 24h

sudo nvram    SystemAudioVolume=%80 # Disable the startup sound.
# sudo nvram -d SystemAudioVolume     # Reenable the startup sound.

defaults write NSGlobalDomain AppleHighlightColor -string '1.000000 0.749020 0.823529' # Set highlight color to OS X Yosemite's default pink. /!\ OBERCHARG'D ANACHRONICAL SHIT CONFIRMED! OK!

defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -boolean false # Don't save to iCloud by default anymore.

# defaults write com.apple.LaunchServices LSQuarantine -boolean false
# Don't warn when opening an application anymore.

/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user # Remove duplicates in "Open with" menu.

defaults write NSGlobalDomain NSTextShowsControlCharacters -boolean true # Display ASCII control characters using caret notation in plain text view.

defaults write NSGlobalDomain NSDisableAutomaticTermination -boolean true # Disable automatic termination of inactive applications.

# defaults write com.apple.helpviewer DevMode -boolean true
# Disable the crash reporter.

# echo "0x08000100:0" > ~/.CFUserTextEncoding
# Fix the ancient UTF-8 bug in QuickLook. /!\ Will cause Adobe trashware to go nuts and do crazy funky shit.

sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostIndo HostName
# Display I.P. address, hostname, O.S. version etc. when clicking the clock in the login window.

# sudo systemsetup -setrestartfreeze on
# Restart automatically if the computer freezes.

# sudo systemsetup -setcomputersleep Off > /dev/null
# Don't enter computer sleep mode

defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1 # Check for software updates daily.

defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -boolean false
defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled  -boolean false
# Disable those bloody "smart" quotes and dashes.

#      rm -rf ~/Library/Application\ Support/Dock/desktoppicture.db
# sudo rm -rf /System/Library/CoreServices/DefaultDesktop.jpg
# sudo ln -s  /Path\ to\ image /System/Library/CoreServices/DefaultDesktop.jpg
# Set a custom wallpaper.

# sudo tmutil disablelocal
# Disable local Time Machine snapshots. (i) S.S.D. trick.

# sudo pmset -a hibernatemode 0
# Disable hibernation mode. (i) S.S.D. trick.

sudo rm           /private/var/vm/sleepimage
sudo touch        /private/var/vm/sleepimage
sudo chflags uchg /private/var/vm/sleepimage
# Remove the sleep image file, write zero-byte file instead and make it unrewritable. (i) S.S.D. trick.

sudo pmset -a sms 0
# Disable the sudden motion sensor. (!) S.S.D. trick.

defaults              write                com.apple.driver.AppleBluetoothMultitouch.trackpad Clicking                     -boolean true
defaults -currentHost write NSGlobalDomain com.apple.mouse.tapBehaviour                                                    -int  1
defaults              write NSGlobalDomain com.apple.mouse.tapBehaviour                                                    -int  1
defaults              write                com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadCornerSecondaryClick -int  2
defaults              write                com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadRightClick           -boolean true
defaults -currentHost write NSGlobalDomain com.apple.trackpad.trackpadCornerClickBehaviour                                 -int  1
defaults -currentHost write NSGlobalDomain com.apple.trackpad.enableSecondaryClick                                         -boolean true
# Enable tap to click for current user and login screen and map bottom-right corner to right click. (i) Trackpad tricks.

defaults write NSGlobalDomain AppleKeyboardUIMode -int 3 # Enable full keyboard access for all controls.

defaults write com.apple.driver.AppleHIDMouse.plist Button2 -int 2 # Enable secondary mouse click.

defaults write com.apple.universalaccess closeViewScrollWheelToggle  -boolean true
defaults write com.apple.universalaccess clHIDScrollZoomModifierMask -int  262144
defaults write com.apple.universalaccess closeViewZoomFollowsFocus   -boolean true
# Use scroll gesture with [strg] modifier key to zoom and follow the keyboard focus while zoomed in.

defaults write ApplePressAndHoldEnabled -boolean false
defaults write NSGlobalDomain KeyRepeat -int 0
# Disable press-and-hold for keys and set key repeat rate to fast. /!\ Enables key repeat.

defaults write NSGlobalDomain AppleLanguages        -array  "en" "fr"
defaults write NSGlobalDomain AppleLocale           -string "en_US@currency=EUR"
defaults write NSGlobalDomain AppleMeasurementUnits -string "Centimeters"
defaults write NSGlobalDomain AppleMetricUnits      -boolean   true
# Set language and text formats.

sudo systemsetup -settimezone "Europe/Paris" > /dev/null
# Set timezone. (i) See "sudo systemsetup -listtimezones" for other values.

defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -boolean false
# Disable automatic spell correction.

defaults write com.apple.screensaver askForPassword      -int 1
defaults write com.apple.screensaver askForPasswordDelay -int 0
# Require password immediately after sleep of screen saver starts.

defaults write -g NSWindowResizeTime -float 0.001
# Speed up Full screen mode animation.

# defaults write com.apple.screencapture disable-shadow -boolean   true
defaults write com.apple.screencapture location       -string "${HOME}/Desktop"
defaults write com.apple.screencapture type           -string "png"
# Disable shadows in screenshots and save 'em to desktop in P.N.G. format. (i) Other options include BMP., GIF, JPEG, P.D.F. and TIFF.

defaults write NSGlobalDomain AppleFontSmoothing -int 2
# Enable subpixel font rendering on non-Apple L.C.D. displays.

sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -boolean true
# Enable Hi.-D.P.I. display modes. /!\ Restart required.

defaults write com.apple.finder QuitMenuItem -boolean true
# Allow Finder to be quit with [âŒ˜] + [Q].

defaults write com.apple.finder NewWindowTarget     -string "PfLo"
defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/"
# Set ~/ as Finder new windows location. (!) Use "PfDe" and "file://${HOME}/Desktop/" for desktop ; "PfLo" and "file:///path" for other paths.

/usr/libexec/PlistBuddy -c "Set DesktopViewSettings:IconViewSettings:labelOnBottom false" ~/Library/Preferences/com.apple.finder.plist
defaults write                com.apple.finder ShowExternalHardDrivesOnDesktop -boolean true
defaults write                com.apple.finder ShowHardDrivesOnDesktop         -boolean true
defaults write                com.apple.finder ShowMountedServersOnDesktop     -boolean true
defaults write                com.apple.finder ShowRemovableMediaOnDesktop     -boolean true
defaults write NSGlobalDomain                  AppleShowAllExtensions          -boolean true
defaults write                com.apple.finder AppleShowAllFiles               -boolean true
defaults write                com.apple.finder ShowStatusBar                   -boolean true
defaults write                com.apple.finder ShowPathbar                     -boolean true
defaults write                com.apple.finder _FXShowPosixPathInTitle -boolean true
# Display items infos to the icons' right, storage drives, servers and removable media one the desktop and files extensions, hidden files, status and path bars and full POSIX path as window title in Finder.

defaults write com.apple.finder QLEnableTextSelection -boolean true
# Allow text selection in QuickLook.

defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"
# Search current folder by default when searching.

defaults write NSGlobalDomain com.apple.springing.enabled -boolean  true
defaults write NSGlobalDomain com.apple.springing.delay   -float    0
# Enable spring loading for directories and remove its delay.

defaults write com.apple.desktopservices DSDontWriteNetworkStores -boolean true
# Disable .DS_Store files writing on network volumes.

# defaults write com.apple.frameworks.diskimages skip-verify        -boolean true
# defaults write com.apple.frameworks.diskimages skip-verify-locked -boolean true
# defaults write com.apple.frameworks.diskimages skip-verify-remote -boolean true
# Disable disk images check.

defaults write com.apple.frameworks.diskimages auto-open-ro-root             -boolean true
defaults write com.apple.frameworks.diskimages auto-open-rw-root             -boolean true
defaults write com.apple.finder                OpenWindowForNewRemovableDisk -boolean true
# Auto-open a new Finder window when a new volume is mounted.

/usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:showItemInfo true"     ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:showItemInfo true" ~/Library/Preferences/com.apple.finder.plist
/usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:showItemInfo true"    ~/Library/Preferences/com.apple.finder.plist
# Show item info near icons on the desktop and in other icon views.

defaults write com.apple.finder FXPreferredViewStyle -string "clmv"
# Use columns view in all Finder window by default. (i) Other viewing modes are "icnv" for icons, "Nlsv" for newlines and "Flwv" for Cover flow.

defaults write com.apple.finder FXArrangeGroupViewBy -string Kind
# Arrange files by kind in Finder.

defaults write com.apple.NetworkBrowser BrowseAllInterfaces -boolean true
# Enable AirDrop over Ethernet and on unsupported Macs running Mac OS X Lion.

sudo nvram boot-args="mbasd=1"
# Enable the MacBook Air SuperDrive on any Mac.

chflags nohidden ~/Library/
# Show the ~/Library folder. (i) Technically a bit fucked up since you already enabled hidden files display earlier in this script.

defaults write com.apple.finder FXInfoPanesExpanded -dict \
                                                          General    -boolean true \
                                                          OpenWith   -boolean true \
                                                          Privileges -boolean true
# Expand General, Open with and Sharing & permissions file info panes by default.

defaults write com.apple.dock expose-animation-duration -float 0.1
# defaults write com.apple.dock expose-group-by-app -boolean false
# Spee animations up and use ExposÃ© behaviour in Mission Control. (i) Don't group windows by application in Mission Control.

defaults write com.apple.dashboard mcx-disabled    -boolean true
defaults write com.apple.dock dashboard-in-overlay -boolean true
# Disable Dashboard and don't display it as a space.

defaults write com.apple.dock mru-spaces -boolean false
# Donâ€™t automatically rearrange Spaces based on most recent use.

# defaults delete com.apple.dock
defaults write  com.apple.dock mouse-over-hilite-stack                 -boolean   true
# defaults write  com.apple.dock single-app                              -boolean   true
# defaults write  com.apple.dock pinning                                 -string    start
defaults write  com.apple.dock showhidden                              -boolean   true
defaults write  com.apple.dock mineffect                               -string    "scale"
defaults write  com.apple.dock minimize-to-application                 -boolean   true
defaults write  com.apple.dock enable-spring-load-actions-on-all-items -boolean   true
defaults write  com.apple.dock show-process-indicators                 -boolean   true
# defaults write  com.apple.dock persistent-apps                         -array
defaults write  com.apple.dock launchanim                              -boolean   false
defaults write  com.apple.dock autohide                                -boolean   true
defaults write  com.apple.dock autohide-delay                          -float     0
defaults write  com.apple.dock autohide-time-modifier                  -float     0
# Reset Dock to defaults, enable highlight when hovering for the grid view of a stack on the Dock, enable Single app mode, align the dock to the left or top, display hidden apps, set window minimaximazation effect as the clean one (purifying OS X of a bit of its weird sick crazyness â€” vade retro satana), minimize windows into their applicationâ€™s icon, enable auto-hiding and speed animation up, enable spring loading for all items, show indicator lights for open applications, wipe the Dock so clean one'd see their face in, disable app opening from Dock animation and make hidden applications Dock icons translucent. /!\ Do not set window minimaximazation effect to hidden "suck" ; the beast could be released!

defaults delete com.apple.dock persistent-apps
defaults delete com.apple.dock persistent-others
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Utilities/Activity Monitor.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/App Store.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Utilities/AppleScript Editor.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/BlackBerry Link.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Calendar.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Google Chrome.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Contacts.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Dropbox.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Evernote.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/iTerm.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/iTunes.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Macaw.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Magnet.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Mail.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Path Finder.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Pixelmator.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Preview.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Safari.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Server.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Shazam.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Sketch.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Skype.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Sony Bridge for Mac.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Stickies.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Utilities/Terminal.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/TextEdit.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Twitter.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/VLC.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Microsoft Office 2011/Microsoft Word.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-apps   -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Xcode.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write  com.apple.dock persistent-others -array-add '{ "tile-data" = { "list-type" = 1; }; "tile-type" = "recents-tile"; }'
defaults write  com.apple.dock persistent-others -array-add "<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications</string><key>_CFURLStringType</key><integer>0</integer></dict><key>file-label</key><string>Applications</string><key>file-type</key><integer>18</integer></dict><key>tile-type</key><string>directory-tile</string></dict>"
defaults write  com.apple.dock persistent-others -array-add "<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Users/revoltxs/Downloads</string><key>_CFURLStringType</key><integer>0</integer></dict><key>file-label</key><string>Downloads</string><key>file-type</key><integer>18</integer></dict><key>tile-type</key><string>directory-tile</string></dict>"
defaults write  com.apple.dock persistent-others -array-add "<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Users/revoltxs/Miscellaneous</string><key>_CFURLStringType</key><integer>0</integer></dict><key>file-label</key><string>Miscellaneous</string><key>file-type</key><integer>18</integer></dict><key>tile-type</key><string>directory-tile</string></dict>"
defaults delete com.apple.dock mod-count
# Clear the Dock and add Activity Monitor, App Store, AppleScript Editor, BlackBerry Link, Calendar, Chrome, Contacts, Dropbox, Evernote, iTerm, iTunes, Macaw, Magnet, Mail, Path Finder, Pixelmator, Preview, Safari, OS X Server, Shazam, Sketch, Skype, Sony bridge for Mac, Stickies, Terminal, TextEdit, Twitter, V.L.C., Word, Xcode, a Recent items stack and the Applications, Downloads and Miscellaneous folders.

defaults write com.apple.ActivityMonitor OpenMainWindow -boolean   true
defaults write com.apple.ActivityMonitor IconType       -int    5
defaults write com.apple.ActivityMonitor ShowCategory   -int    0
defaults write com.apple.ActivityMonitor SortColumn     -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection  -int    0
# Show the main window when launching, visualize C.P.U. usage in the Dock icon, show al processes and sort results by C.P.U. usage in Activity Monitor.

defaults write com.apple.addressbook ABShowDebugMenu -boolean true
# Enable debug menu in Address Book.

defaults write com.apple.dashboard devmode -boolean true
# Enable Dashboard dev mode (allows keeping widgets on the desktop).

defaults write com.apple.DiskUtility DUDebugMenuEnabled     -boolean true
defaults write com.apple.DiskUtility advanced-image-options -boolean true
# Enable the debug menu in Disk Utility.

defaults write com.apple.iCal IncludeDebugMenu -boolean true
# Enable the debug menu in iCal (ante-OS X 10.8).

# defaults write com.apple.dock showLaunchpadGestureEnabled -int 0
# Disable the Launchpad gesture (pinch with thumb and three fingers).

# find "${HOME}/Library/Application Support/Dock" -name "*-*.db" -maxdepth 1 -delete
# Reset LaunchPad keeping the desktop wallpaper intact.

sudo ln -sf "/Applications/Xcode.app/Contents/Developer/Applications/iOS Simulator.app" "/Applications/iOS Simulator.app"
defaults write com.apple.dock ResetLaunchPad -boolean true
# Add iOS simulator to LaunchPad and reset organization by default.

defaults write com.apple.dock persistent-apps -array-add '{tile-data={}; tile-type="spacer-tile";}'
defaults write com.apple.dock persistent-others -array-add '{tile-data={}; tile-type="spacer-tile";}'
# Add spacers to the Dock's left and right sides.

defaults write                com.apple.Safari UniversalSearchEnabled                                                           -boolean   false
defaults write                com.apple.Safari SuppressSearchSuggestions                                                        -boolean   true
defaults write                com.apple.Safari WebKitTabToLinksPreferenceKey                                                    -boolean   true
defaults write                com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2TabsToLinks                   -boolean   true
defaults write                com.apple.Safari ShowFullURLInSmartSearchField                                                    -boolean   true
defaults write                com.apple.Safari HomePage                                                                         -string "about:blank"
defaults write                com.apple.Safari AutoOpenSafeDownloads                                                            -boolean   false
defaults write                com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -boolean   true
defaults write                com.apple.Safari ShowFavoritesBar                                                                 -boolean   false
defaults write                com.apple.Safari ShowSidebarInTopSites                                                            -boolean   false
defaults write                com.apple.Safari DebugSnapshotsUpdatePolicy                                                       -int    2
defaults write                com.apple.Safari IncludeInternalDebugMenu                                                         -boolean   true
defaults write                com.apple.Safari FindOnPageMatchesWordStartsOnly                                                  -boolean   false
defaults write                com.apple.Safari IncludeDevelopMenu                                                               -boolean   true
defaults write                com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey                                        -boolean   true
defaults write                com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled        -boolean   true
defaults write NSGlobalDomain WebKitDeveloperExtras                                                                             -boolean   true
defaults write                com.apple.Safari CanPromptForPushNotifications                                                    -boolean   no
# Don't send search queries to Apple, use [Tab] to highlight pages' items, show the full U.R.L., set home page to "about:blank", prevent "safe" files auto-opening after downloading, use [Backspace] to go to previous page, hide the bookmarks bar, hide sidebar in top sites, disable the thumbnail cache for history and top sites, enable the debug menu, make search banners default to Contains instead of Starts with, enable Develop menu and Web inspector, add a context menu item for showing the Web inspector in web views and don't allow websites to ask for permission to send push notifications in Safari.

defaults write com.apple.mail AddressesIncludeNameOnPasteboard                                   -boolean false
defaults write com.apple.mail DraftsViewerAttributes           -dict-add "DisplayInThreadedMode" -string "yes"
defaults write com.apple.mail DraftsViewerAttributes           -dict-add "SortedAscending"       -string "yes"
defaults write com.apple.mail DraftsViewerAttributes           -dict-add "SortOrder"             -string "received-date"
defaults write com.apple.mail DisableInlineAttachmentViewing                                     -boolean   true
defaults write com.apple.mail SpellCheckingBehavior                                              -string "NoSpellCheckingEnabled"
# Copy email addresses as "first.last@foo.com" instead of "First Last <first.last@foo.com>", display emails in threaded mode (newest at the top), disable inline attachments (just show the icons) and disable automatic spell checking.

defaults write com.apple.reminders StartAtLogin -boolean true
# Start Reminders at login.

defaults write com.apple.terminal StringEncodings -array 4
defaults write com.apple.terminal StartAtLogin    -boolean  true
# Only use U.T.F.-8 in Terminal and launch it at startup.

defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -boolean true
# Prevent local Time Machine from prompting to use new hard drives as backup volume.

defaults write com.apple.appstore WebKitDeveloperExtras -boolean true
defaults write com.apple.appstore ShowDebugMenu         -boolean true
# Enable the Debug menu and WebKit Developer Tools in the Mac App Store.

defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticEmojiSubstitutionEnablediMessage" -boolean false
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "automaticQuoteSubstitutionEnabled"         -boolean false
defaults write com.apple.messageshelper.MessageController SOInputLineSettings -dict-add "continuousSpellCheckingEnabled"            -boolean false
# Disable automatic emoji substitution, "smart" quotes and continuous spell checking in Messages.

defaults write com.apple.TextEdit RichText                  -int 0
defaults write com.apple.TextEdit PlainTextEncoding         -int 4
defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4
# Use plain text mode for new documents and open and save files as U.T.F.-8 in TextEdit.

# xcode-select --install
# Install Xcode.

defaults write com.evernote.Evernote       StartAtLogin -boolean true
defaults write com.evernote.EvernoteHelper StartAtLogin -boolean true
# Start Evernote at login.

defaults write com.shazam.mac.Shazam       StartAtLogin -boolean true
defaults write com.shazam.mac.ShazamHelper StartAtLogin -boolean true
# Start Shazam at login.

defaults write org.m0k.transmission UseIncompleteDownloadFolder -boolean   true
defaults write org.m0k.transmission IncompleteDownloadFolder    -string "${HOME}/Downloads/Transmission/"
defaults write org.m0k.transmission DownloadAsk                 -boolean   false
defaults write org.m0k.transmission WarningDonate               -boolean   false
defaults write org.m0k.transmission WarningLegal                -boolean   false
# Use "~/Downloads/Transmission/" to store incomplete downloads, don't prompt for confirmation before downloading, hide the donate message and hide the legal disclaimer in Transmission.

defaults write com.twitter.twitter-mac StartAtLogin                      -boolean true
defaults write com.twitter.twitter-mac AutomaticQuoteSubstitutionEnabled -boolean false
defaults write com.twitter.twitter-mac ShowDevelopMenu                   -boolean true
defaults write com.twitter.twitter-mac ESCClosesComposeWindow            -boolean true
defaults write com.twitter.twitter-mac ShowFullNames                     -boolean true
# Launch the app at login, disable smart quotes, enable Develop menu, enable [Escape] to close New tweet window and show full names rather than usernames in Twitter.

if [ -d "~/{.files,Miscellaneous,OPs}/" ]; then
if [ -L "~/{.files,Miscellaneous,OPs}/" ]; then # shit's a symlink so
rm ~/{.files,Miscellaneous,OPs}/
else
mkdir -p ~/{.files,Miscellaneous,OPs}/
fi
fi
# Ensure that .files, Miscellaneous/ and OPs/ exist in ~/.

for app in "Activity Monitor" "Address Book" "Calendar" "Contacts" "cfprefsd" "Dock" "Finder" "iCal" "Mail" "Messages" "Safari" "SystemUIServer" "Terminal" "Transmission" "Twitter"; do
    killall "${app}" > /dev/null 2>&1
done
echo "Done. It's time to reboot, as usual."
# Kill all affected applications.

